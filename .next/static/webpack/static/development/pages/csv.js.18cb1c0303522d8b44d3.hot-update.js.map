{"version":3,"file":"static/webpack/static/development/pages/csv.js.18cb1c0303522d8b44d3.hot-update.js","sources":["webpack:///./helpers/CsvHelper.js"],"sourcesContent":["const Papa = require('Papaparse');\n\n\n// return jsonData\nfunction readCsv(file){\n  const config = {\n    headers: true\n  }\n  Papa.parse(file, {\n    header: false,\n    complete: (results) => {\n      //console.log(results);\n      //console.log(cleanUp(results));\n      //console.log(transformer(results, 0,1));\n      //console.log(JSON.stringify(transformer(results, 0,1)));\n      /*\n      ex = [\n      {\"hospital\":\"\",\"procedureName\":\"12X40X120 PROTEGE STENT\",\"procedureCost\":\"1500.00\"},\n      {\"hospital\":\"\",\"procedureName\":\"12X46 RELIANT STENT GRAFTCATH\",\"procedureCost\":\"500.00\"},\n      {\"hospital\":\"\",\"procedureName\":\"12X8 AMPLATZER VASCULAR PLUG\",\"procedureCost\":\"1484.00\"}\n      ]\n      */\n      postToEndpoint(results);\n    }\n  });\n\n}\nfunction postToEndpoint(data) {\n  const endpoint = 'https://pacific-lake-79223.herokuapp.com/api/push/bulk'\n  const options = {\n    method: 'POST',\n    body: data,\n    credentials: 'include',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }\n  // leggo\n  fetch(endpoint, options)\n    .then(response => { // check response\n      console.log(response.status)\n    })\n    .then(json => {\n      console.log(json.json());\n    })\n    .catch(err => {\n      console.log(err);\n    });\n\n}\nfunction cleanUp(json, removeHeader) {\n\n  for (var el of json) {\n      el.map((x) => {\n        if (x.length > 0) {\n          return x;\n        }\n      });\n    }\n  return json;\n}\n\n// parse source, return array of clean records\nfunction transformer(json, descPos, costPos){ // alias = file column names for procedureName, etc\n  const records = [];\n  const recordTemplate = {\n    hospital: '',\n    procedureName: '',\n    procedureCost: ''\n  }\n  // remove first line {usually a shit header }\n  json['data'].shift();\n  for (var element of json['data']) {\n\n    var record = {...recordTemplate};\n    record['hospital'] = 'Mount Sinai Hospital';\n    record['procedureName'] = element[descPos].trim();\n    record['procedureCost'] = element[costPos].replace(\"$\", \"\").replace(\",\", \"\").trim();\n    records.push(record);\n\n  }\n\n  return records;\n  //console.log(record);\n\n}\nmodule.exports.readCsv = readCsv;\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;AAOA;AACA;AAfA;AAkBA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AALA;AASA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AARA;AAAA;AAAA;AACA;AADA;AASA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAkBA;AAGA;AACA;AAAA;;;;A","sourceRoot":""}