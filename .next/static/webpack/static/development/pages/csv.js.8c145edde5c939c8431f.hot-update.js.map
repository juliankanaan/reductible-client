{"version":3,"file":"static/webpack/static/development/pages/csv.js.8c145edde5c939c8431f.hot-update.js","sources":["webpack:///./helpers/CsvHelper.js"],"sourcesContent":["const Papa = require('Papaparse');\n\n\n// return jsonData\nfunction readCsv(file){\n  const config = {\n    headers: true\n  }\n  Papa.parse(file, {\n    header: false,\n    complete: (results) => {\n      //console.log(results);\n      console.log(cleanUp(results));\n      //console.log(transformer(results, 1, 2));\n    }\n  });\n\n}\nfunction cleanUp(json, removeHeader) {\n  // remove first line if needed\n\n  for (var el of json) {\n      el.map((x) => {\n        if (x.length > 0) {\n          return x;\n        }\n      });\n    }\n  return json;\n}\n\n// parse source, return array of clean records\nfunction transformer(json, descPos, costPos){ // alias = file column names for procedureName, etc\n\n  const recordTemplate = {\n    hospital: '',\n    procedureName: '',\n    procedureCost: ''\n  }\n  for (var element in json) {\n    var record = {...recordTemplate};\n    record['procedureName'] = element[descPos].trim();\n    record['procedureCost'] = element[costPos].replace(\"$\", \"\").trim(); \n  }\n\n   // clone\n  // look through source column names, get relevant data for us\n\n  return record;\n  //console.log(record);\n\n}\nmodule.exports.readCsv = readCsv;\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAEA;AANA;AASA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAGA;AACA;AAAA;;;;A","sourceRoot":""}