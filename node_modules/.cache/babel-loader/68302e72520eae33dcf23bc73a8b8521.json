{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/juliankanaan/Documents/GitHub/clientReactInterfact/components/UrlForm.jsx\";\nimport React from 'react';\nimport helper from \"../helpers/helper.js\";\n\nvar UrlForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UrlForm, _React$Component);\n\n  function UrlForm(props) {\n    var _this;\n\n    _classCallCheck(this, UrlForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UrlForm).call(this, props));\n    _this.state = {\n      url: '',\n      schema: ''\n    }; // bind \"this\"\n\n    _this.handleUrlChange = _this.handleUrlChange.bind(_assertThisInitialized(_this));\n    _this.handleSchemaChange = _this.handleSchemaChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(UrlForm, [{\n    key: \"handleUrlChange\",\n    value: function handleUrlChange(event) {\n      this.setState({\n        url: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSchemaChange\",\n    value: function handleSchemaChange(event) {\n      this.setState({\n        schema: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      alert('A name was submitted: ' + this.state.url + \" \" + this.state.schema);\n      event.preventDefault(); // TODO: should create fetch() POST request after data is validated\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"url\",\n        value: this.state.url,\n        onChange: this.handleUrlChange,\n        placeholder: \"URL goes here\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        name: \"scehma\",\n        value: this.state.schema,\n        onChange: this.handleSchemaChange,\n        placeholder: \"Schema key goes here\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return UrlForm;\n}(React.Component);\n\nexport { UrlForm as default };","map":{"version":3,"sources":["/Users/juliankanaan/Documents/GitHub/clientReactInterfact/components/UrlForm.jsx"],"names":["React","helper","UrlForm","props","state","url","schema","handleUrlChange","bind","handleSchemaChange","handleSubmit","event","setState","target","value","alert","preventDefault","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;IAEqBC,O;;;;;AACnB,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE,EADM;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb,CAFiB,CAMjB;;AACA,UAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBC,IAArB,+BAAvB;AACA,UAAKC,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBD,IAAxB,+BAA1B;AACA,UAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBF,IAAlB,+BAApB;AATiB;AAUlB;;;;oCAEeG,K,EAAO;AACrB,WAAKC,QAAL,CAAc;AAACP,QAAAA,GAAG,EAAEM,KAAK,CAACE,MAAN,CAAaC;AAAnB,OAAd;AACD;;;uCACkBH,K,EAAM;AACvB,WAAKC,QAAL,CAAc;AAACN,QAAAA,MAAM,EAAEK,KAAK,CAACE,MAAN,CAAaC;AAAtB,OAAd;AACD;;;iCAEYH,K,EAAO;AAClBI,MAAAA,KAAK,CAAC,2BAA2B,KAAKX,KAAL,CAAWC,GAAtC,GAA4C,GAA5C,GAAkD,KAAKD,KAAL,CAAWE,MAA9D,CAAL;AAEAK,MAAAA,KAAK,CAACK,cAAN,GAHkB,CAIlB;AACD;;;6BAEQ;AACP,aACE;AAAM,QAAA,QAAQ,EAAE,KAAKN,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,KAAxB;AAA8B,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,GAAhD;AAAqD,QAAA,QAAQ,EAAE,KAAKE,eAApE;AAAqF,QAAA,WAAW,EAAC,eAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAU,QAAA,IAAI,EAAC,QAAf;AAAwB,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,MAA1C;AAAkD,QAAA,QAAQ,EAAE,KAAKG,kBAAjE;AAAqF,QAAA,WAAW,EAAC,sBAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF,EAME;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF;AAUD;;;;EAtCkCT,KAAK,CAACiB,S;;SAAtBf,O","sourcesContent":["import React from 'react';\nimport helper from \"../helpers/helper.js\"\n\nexport default class UrlForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: '',\n      schema: ''\n    };\n    // bind \"this\"\n    this.handleUrlChange = this.handleUrlChange.bind(this);\n    this.handleSchemaChange = this.handleSchemaChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleUrlChange(event) {\n    this.setState({url: event.target.value});\n  }\n  handleSchemaChange(event){\n    this.setState({schema: event.target.value});\n  }\n\n  handleSubmit(event) {\n    alert('A name was submitted: ' + this.state.url + \" \" + this.state.schema);\n\n    event.preventDefault();\n    // TODO: should create fetch() POST request after data is validated\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name:\n          <input type=\"text\" name='url' value={this.state.url} onChange={this.handleUrlChange} placeholder=\"URL goes here\" />\n          <textarea name=\"scehma\" value={this.state.schema} onChange={this.handleSchemaChange} placeholder=\"Schema key goes here\" />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}