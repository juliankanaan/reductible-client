{"ast":null,"code":"// accept URL, a schema\n\n/*\nOverall thoughts:\n1. validate fields\n2. check for errors\n3. Re-render form w/ errors or make POST to REST endpoints\n*/\nvar fetch = require('isomorphic-fetch');\n\nexport default function processFormRequest(url, schema) {\n  // 2: make fetch request\n\n  /*\n  fetch(url).then(data => {\n    console.log(data);\n    const bigData = data;\n  })\n  .catch(err => {\n    console.log(err);\n    //const bigData = null; // empty\n  });\n  */\n  // 3: reformat existing data into clean objects\n  // 3.5 create Price model objects via mongoose\n  // 4: batch insert all the objects\n  // var cleanData = [Arr1, Arr2  ...]\n\n  /* https://mongoosejs.com/docs/api.html#model_Model.insertMany\n  ThesePrices.insertMany(cleanData)\n    .then(docs => {\n      // do something w/ docs\n    })\n    .catch(err =>){\n    // throw error\n  } // end DB save();\n  */\n  console.log(\"urlFormHelper\");\n} // usage:","map":{"version":3,"sources":["/Users/juliankanaan/Documents/GitHub/clientReactInterfact/helpers/urlFormHelper.js"],"names":["fetch","require","processFormRequest","url","schema","console","log"],"mappings":"AAAA;;AACA;;;;;;AAMA,IAAMA,KAAK,GAAGC,OAAO,CAAC,kBAAD,CAArB;;AAEA,eAAe,SAASC,kBAAT,CAA4BC,GAA5B,EAAiCC,MAAjC,EAAwC;AAErD;;AACA;;;;;;;;;;AAUA;AAEA;AAEA;AACA;;AACA;;;;;;;;;AASAC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,C,CAAC","sourcesContent":["// accept URL, a schema\n/*\nOverall thoughts:\n1. validate fields\n2. check for errors\n3. Re-render form w/ errors or make POST to REST endpoints\n*/\nconst fetch = require('isomorphic-fetch');\n\nexport default function processFormRequest(url, schema){\n\n  // 2: make fetch request\n  /*\n  fetch(url).then(data => {\n    console.log(data);\n    const bigData = data;\n  })\n  .catch(err => {\n    console.log(err);\n    //const bigData = null; // empty\n  });\n  */\n  // 3: reformat existing data into clean objects\n\n  // 3.5 create Price model objects via mongoose\n\n  // 4: batch insert all the objects\n  // var cleanData = [Arr1, Arr2  ...]\n  /* https://mongoosejs.com/docs/api.html#model_Model.insertMany\n  ThesePrices.insertMany(cleanData)\n    .then(docs => {\n      // do something w/ docs\n    })\n    .catch(err =>){\n    // throw error\n  } // end DB save();\n  */\n  console.log(\"urlFormHelper\");\n} // usage:\n"]},"metadata":{},"sourceType":"module"}